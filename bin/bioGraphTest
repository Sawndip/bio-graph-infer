#!/usr/bin/env	python2.7

import os, sys
from subprocess import call
sys.path.append(sys.path[0]+"/../lib")

from optparse import OptionParser
parser = OptionParser()
parser.add_option("--pathway",dest="pathway",action="store",default=None)
parser.add_option("--fg",dest="fgraph",action="store",default=None)
parser.add_option("--obs",dest="obs",action="store",default=None)
parser.add_option("--output",dest="output",action="store",default=None)
parser.add_option("--libdaiBIN",dest="bin",action="store",default=None)
parser.add_option("--no_shared_em",dest="shared",action="store_false",default=True)
(opts, args) = parser.parse_args()

from factor import *
from graph import *

# read the pathway
fg = Graph(opts.pathway)
obs = Obs(opts.obs)
# add observation nodes
fg.addObs(obs)
fg.buildFactors(opts.shared)

# print observations
fg.printOBS(opts.output+"/test.tab")
# run the libDAI code to do INFERENCE on the learned factor graph it will read this by default
call(["cp",opts.fgraph, opts.output+"/learned.fg"])
print("Running INFERENCE...")
print "cd "+opts.output+" && "+"../"+opts.bin
output = call("cd "+opts.output+" && "+"../"+opts.bin+" > samples.sll 2>inf.err", shell=True)

sllFH = open(opts.output+"/samples.sll", 'r')

print "Sample Log Likelihoods"
fg.addSampleLL(sllFH)
fg.printSampleLL()

